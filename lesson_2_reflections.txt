Reflect: Initializing a Repository
What happens when you initialize a repository? Why do you need to do it?
It adds the .git metadata directory into the folder and creating the repository.  This is needed to get git ready for tracking changes within that directory.

Reflect: Staging Area
How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area allows individual files to be added into a single commit allowing concepts to be separated into different logical commits.
The staging area is different from the working directory because the working directory contains all active files. The repository only contains the committed files.

Reflect: Commit Size
How can you use the staging area to make sure you have one commit per logical change?
By adding files that make sense for the commit.  You can compare using git diff to show the files in the Working Directory compared to those in the Staging Area

Reflect: When to Use Branches
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches are useful when you want to go and explore different paths of development while leaving your original working codebase in tact.

Reflect: Visualizing with Diagrams
How do the diagrams help you visualize the branch structure?
They show where the commits are on the master and branch and allow you to trace back to the origin of each branch